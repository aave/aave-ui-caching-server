name: Production deploy

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}-prod'
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.build.outputs.image_name }}
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/build
        name: Build image
        id: build

  deploy_production:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    container: 
      image: registry.gitlab.com/aave-tech/k8s:63f618c0
      credentials:
        username: github-actions
        password: ${{ secrets.KUBE_IMAGE_PULL }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - CHAIN_ID: "1"
            CHAIN_NAME: mainnet
          - CHAIN_ID: "137"
            CHAIN_NAME: polygon
          - CHAIN_ID: "43114"
            CHAIN_NAME: avalanche
    steps:
      - uses: actions/checkout@v2
      
      - name: GCP Auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_CLUSTER_REGION }}

      - name: Render kdsl resources into yaml
        env: 
          MAINNET_RPC: '${{ secrets.MAINNET_RPC }}'
          POLYGON_RPC: '${{ secrets.POLYGON_RPC }}'
          RECIPE: "base+chain${{ matrix.CHAIN_ID }}"
          DOMAIN: cache-api-${{ matrix.CHAIN_NAME }}.aave.com
          CHAIN_ID: ${{ matrix.CHAIN_ID }}
          NAMESPACE: cache-${{ matrix.CHAIN_NAME }}
          IMAGE: ${{ needs.build.outputs.image_name }}
        run: |
          cd k8s/
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}
          python3 main.py > ../rendered.yml
      
      - name: Apply k8s resources
        run: |
          kubectl apply -f rendered.yml --dry-run=server
          kubectl apply -f rendered.yml
          kubectl rollout status --watch --timeout=30s deploy/api
