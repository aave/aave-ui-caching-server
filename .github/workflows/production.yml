name: Production deploy

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}-prod'
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.build.outputs.image_name }}
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/build
        name: Build image
        id: build

  deploy_production:

    runs-on: ubuntu-latest
    environment: production
    needs: build
    container: 
      image: qwolphin/kdsl:1.21.8
    strategy:
      fail-fast: false
      matrix:
        CHAIN_ID:
          - "1"
          - "137"
          - "43114"
    permissions:
      id-token: write
      
    steps:
      - uses: actions/checkout@v2
      
      - name: GCP Auth
        uses: google-github-actions/auth@v0.6.0
        with:
          workload_identity_provider: ${{ secrets.GCP_workload_identity_provider }}
          service_account: ${{ secrets.GCP_service_account }}
          token_format: 'access_token'
          
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0.4.0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_CLUSTER_REGION }}

      - name: Render kdsl resources into yaml
        env: 
          MAINNET_RPC: '${{ secrets.MAINNET_RPC }}'
          POLYGON_RPC: '${{ secrets.POLYGON_RPC }}'
          RECIPE: "chain${{ matrix.CHAIN_ID }}"
          DOMAIN: cache-api-${{ matrix.CHAIN_ID }}.aave.com
          CHAIN_ID: ${{ matrix.CHAIN_ID }}
          IMAGE: ${{ needs.build.outputs.image_name }}
          COMMIT_SHA: "${{ github.sha }}"
          NAMESPACE: cache-${{ matrix.CHAIN_ID }}
          ENV_NAME: production
        run: |
          cd k8s/
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}
          python3 main.py > ../rendered.yml
      
      - name: Apply k8s resources
        run: |
          kubectl apply -f rendered.yml --dry-run=server
          kubectl apply -f rendered.yml
          sleep 3
          kubectl wait --for condition=ready --timeout 90s pods -l "commit_sha=${{ github.sha }}" || \
          { kubectl get pods && exit 1; }
